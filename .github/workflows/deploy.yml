# Simple workflow for deploying static content to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
 build:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout Live Content Repo
      uses: actions/checkout@v4
      with:
        repository: 'AmmarKhanAlamgirOfficial/live-content'
        token: ${{ secrets.CONTENT_PULL_TOKEN }}
        path: '_live_updates'
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true # runs 'bundle install' and caches installed gems
    - name: Build with Jekyll
      # Tell Jekyll to build in production mode
      run: bundle exec jekyll build --verbose
      env:
        JEKYLL_ENV: production
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  # Deployment job
 deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
